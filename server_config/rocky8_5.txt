//EXPAND PARTITION
    sudo rootfs-expand

//Network 192.168.88.99 255.255.255.0 192.168.88.1
    sudo nmtui
        Edit a Connection
        Activate

//CREATE USER
    sudo adduser miracle
    sudo passwd miracle //mproject123321
    //give sudo
    sudo usermod -aG wheel miracle

//UPDATE PACKAGE REPOSITORIES
    sudo dnf makecache

//UPGRADE SYSTEM PACKAGES
    sudo dnf upgrade

//ENABLE EPEL
    sudo dnf install epel-release

//CONFIGURE TIME SERVER
    sudo yum erase 'ntp*'
    sudo yum install chrony
        REVISAR -> /etc/chrony.conf -> 	DEBE TENER -> server 169.254.169.123 prefer iburst minpoll 4 maxpoll 4
    sudo service chronyd restart
    sudo chkconfig chronyd on
    chronyc sources -v
        DEBIERA MOSTRAR ALGO ASI
            210 Number of sources = 7

        .-- Source mode  '^' = server, '=' = peer, '#' = local clock.
        / .- Source state '*' = current synced, '+' = combined , '-' = not combined,
        | /   '?' = unreachable, 'x' = time may be in error, '~' = time too variable.
        ||                                                 .- xxxx [ yyyy ] +/- zzzz
        ||      Reachability register (octal) -.           |  xxxx = adjusted offset,
        ||      Log2(Polling interval) --.      |          |  yyyy = measured offset,
        ||                                \     |          |  zzzz = estimated error.
        ||                                 |    |           \
        MS Name/IP address         Stratum Poll Reach LastRx Last sample               
        ===============================================================================
        ^* 169.254.169.123               3   6    17    43    -30us[ -226us] +/-  287us
        ^- ec2-12-34-231-12.eu-west>     2   6    17    43   -388us[ -388us] +/-   11ms
        ^- tshirt.heanet.ie              1   6    17    44   +178us[  +25us] +/- 1959us
        ^? tbag.heanet.ie                0   6     0     -     +0ns[   +0ns] +/-    0ns
        ^? bray.walcz.net                0   6     0     -     +0ns[   +0ns] +/-    0ns
        ^? 2a05:d018:c43:e312:ce77:>     0   6     0     -     +0ns[   +0ns] +/-    0ns
        ^? 2a05:d018:dab:2701:b70:b>     0   6     0     -     +0ns[   +0ns] +/-    0ns

    chronyc tracking
    sudo nano /etc/sysconfig/clock
        ZONE="Chile/Continental"
    sudo ln -sf /usr/share/zoneinfo/Chile/Continental /etc/localtime
    sudo reboot
    date

//DISABLE SELINUX
    sudo getenforce //if "Enforcing"
    sudo vi /etc/selinux/config
        SELINUX=disabled
    sudo reboot

//INSTALL C++
    sudo yum install -y gcc-c++ make

//INSTALL AUX
    sudo yum install tar
    sudo yum install htop

//INSTALL NODE
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
    . ~/.nvm/nvm.sh
    nvm install node
    node -e "console.log('Running Node.js ' + process.version)"



//INSTALL PYTHON
    sudo dnf install -y curl gcc openssl-devel bzip2-devel libffi-devel zlib-devel wget make
    wget https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tar.xz
    tar -xf Python-3.10.4.tar.xz
    cd Python-3.10.4
    ./configure --enable-optimizations
    make -j 2
    sudo make altinstall
    export PATH=/Library/Frameworks/Python.framework/Versions/3.10/bin:$PATH
    python3.10 -V
    npm config set python "/usr/local/bin/python3.10"

//INSTALL PM2
    npm install pm2@latest -g
    pm2 install pm2-logrotate
    pm2 set pm2-logrotate:max_size 100M
    pm2 set pm2-logrotate:TZ America/Santiago
    pm2 startup

    cd /opt/miracle_project/game_engine/
    pm2 start io_handler.js -l --log ./pm2_game_engine_logs/io_handler_log.log --time

//INSTALL OPENSSH
    sudo dnf install openssh-server
    sudo systemctl enable sshd.service
    sudo systemctl start sshd.service

//OPEN PORTS
    sudo firewall-cmd --zone=public --add-service=http --permanent
    sudo firewall-cmd --zone=public --add-service=https --permanent
    sudo firewall-cmd --zone=public --add-service=dns --permanent
    sudo firewall-cmd --zone=public --add-service=ssh --permanent
    sudo firewall-cmd --add-port 54321/tcp --permanent 
    sudo firewall-cmd --reload

//NGINX
    sudo yum update

    sudo yum install tar

    sudo yum install nginx

    sudo vi /etc/nginx/conf.d/miracleproject.online.conf

        upstream upstream-nodejs {
            server 127.0.0.1:54321;
        }

        server {
            server_name    miracleproject.online www.miracleproject.online;
            root           /var/www/miracleproject.online;
            index          index.html;

            gzip             on;
            gzip_comp_level  3;
            gzip_types       text/plain text/css application/javascript image/*;

            location ~* \.io {
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header Host $host;
                    proxy_set_header X-real_IP $remote_addr;
                    proxy_pass https://upstream-nodejs;
                    proxy_redirect off;

                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                }
        }

    sudo vi /etc/nginx/conf.d/spartanbears.tech.conf

        server {
            listen 80;
            server_name    spartanbears.tech www.spartanbears.tech;
            root           /var/www/spartanbears.tech;
            index          index.html;

            gzip             on;
            gzip_comp_level  3;
            gzip_types       text/plain text/css application/javascript image/*;
        }

    sudo reboot

    //HTTPS
        sudo dnf install epel-release
        sudo dnf upgrade
        sudo yum install snapd
        sudo systemctl enable --now snapd.socket
        sudo ln -s /var/lib/snapd/snap /snap
        sudo reboot
        sudo snap install core; sudo snap refresh core
        sudo dnf remove certbot
        sudo yum remove certbot
        sudo snap install --classic certbot
        sudo ln -s /snap/bin/certbot /usr/bin/certbot
        sudo certbot --nginx
        sudo certbot renew --dry-run

//CONFIGURE CLOUDFLARE TUNNEL
    sudo su
    cd ~
    wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-aarch64.rpm
    rpm -i cloudflared-linux-aarch64.rpm
    cloudflared tunnel login
    cloudflared tunnel create miracleproject
    vi config.yaml
        //PRE CERTBOT
            tunnel: 3fc16959-81ce-4dac-9396-0bc3d2cf56ba //CHANGE TO CORRESPONDING ID
            credentials-file: /root/.cloudflared/3fc16959-81ce-4dac-9396-0bc3d2cf56ba.json //CHANGE TO CORRESPONDING FILE
            ingress:
                    - hostname: miracleproject.online
                    service: http://192.168.88.50

                    - hostname: www.miracleproject.online
                    service: http://192.168.88.50

                    - service: http_status:404
        //POST CERTBOT
            tunnel: 3fc16959-81ce-4dac-9396-0bc3d2cf56ba //CHANGE TO CORRESPONDING ID
            credentials-file: /root/.cloudflared/3fc16959-81ce-4dac-9396-0bc3d2cf56ba.json //CHANGE TO CORRESPONDING FILE
            ingress:
                    - hostname: miracleproject.online
                    service: https://192.168.88.50
                    originRequest:
                        noTLSVerify: true

                    - hostname: www.miracleproject.online
                    service: https://192.168.88.50
                    originRequest:
                        noTLSVerify: true

                    - service: http_status:404


    cloudflared tunnel route dns miracleproject miracleproject.online
    cloudflared tunnel run miracleproject
    cloudflared service install

    cloudflared tunnel create spartanbears
    vi config.yaml
        //PRE CERTBOT
            tunnel: 8e90f0a7-bab4-41c0-aa6b-a71516b4c86a //CHANGE TO CORRESPONDING ID
            credentials-file: /root/.cloudflared/8e90f0a7-bab4-41c0-aa6b-a71516b4c86a.json //CHANGE TO CORRESPONDING FILE
            ingress:
                    - hostname: spartanbears.tech
                    service: http://192.168.88.50

                    - hostname: www.spartanbears.tech
                    service: http://192.168.88.50

                    - service: http_status:404
        //POST CERTBOT
            tunnel: 8e90f0a7-bab4-41c0-aa6b-a71516b4c86a //CHANGE TO CORRESPONDING ID
            credentials-file: /root/.cloudflared/8e90f0a7-bab4-41c0-aa6b-a71516b4c86a.json //CHANGE TO CORRESPONDING FILE
            ingress:
                    - hostname: spartanbears.tech
                    service: https://192.168.88.50
                    originRequest:
                        noTLSVerify: true

                    - hostname: www.spartanbears.tech
                    service: https://192.168.88.50
                    originRequest:
                        noTLSVerify: true

                    - service: http_status:404


    cloudflared tunnel route dns spartanbears spartanbears.tech
    cloudflared tunnel run spartanbears



//POSTGRESQL

    sudo dnf -qy module disable postgresql

    sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    sudo dnf -y install https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-aarch64/pgdg-redhat-repo-latest.noarch.rpm

    sudo dnf --nogpgcheck -y install https://download.postgresql.org/pub/repos/yum/common/redhat/rhel-8-aarch64/pgdg-redhat-repo-42.0-25.noarch.rpm

    sudo dnf -y --nogpgcheck install postgresql14 postgresql14-server

    sudo dnf -y --nogpgcheck install postgresql-contrib

    sudo /usr/pgsql-14/bin/postgresql-14-setup initdb

    sudo vi /var/lib/pgsql/14/data/postgresql.conf
        listen_addresses = '*'
        port = 5432

    sudo vi /var/lib/pgsql/14/data/pg_hba.conf
        host all all 0.0.0.0/0 ident

    sudo systemctl start postgresql-14.service

    sudo systemctl enable postgresql-14.service

    sudo -u postgres psql -c "SELECT version();" //check if works

    sudo -u postgres psql

    CREATE ROLE miracle;

    CREATE DATABASE miracle_project;

    GRANT ALL PRIVILEGES ON DATABASE miracle_project TO miracle;

    ALTER ROLE "miracle" WITH LOGIN;

    \password miracle //52184623

    \q

    sudo systemctl restart postgresql-14

    ss -nlt | grep 5432 //check if pgsql listen on desired ports
        LISTEN   0    128    0.0.0.0:5432    0.0.0.0:*       
        LISTEN   0    128    [::]:5432      [::]:*

//CONFIG DUCK DNS
    sudo mkdir /var/duckdns_config
    sudo chown miracle /var/duckdns_config
    sudo chgrp miracle /var/duckdns_config
    cd /var/duckdns_config
    mkdir logs
    vi duckdns.sh
        echo url="https://www.duckdns.org/update?domains=ns-spears&token=a70e9dbe-3220-4678-89b0-805a91ee8d17&ip=" | curl -k -o /var/duckdns_config/logs/duckdns.log -K -
    chmod 700 duckdns.sh
    crontab -e
        */5 * * * * /var/duckdns_config/duckdns.sh >/dev/null 2>&1
    ./duckdns.sh

//CONFIG FAIL2BAN
    sudo yum install fail2ban
    sudo systemctl enable fail2ban
    sudo vi /etc/fail2ban/jail.local
        [sshd]
        enabled = true
        filter = sshd
        port = ssh
        #Set ban time to 30 days
        bantime = 2592000
        #Decrease the number of failed login attempts before banning to 3
        maxretry = 3
    sudo systemctl restart fail2ban 
